\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\newlabel{tocindent-1}{0pt}
\newlabel{tocindent0}{0pt}
\newlabel{tocindent1}{0pt}
\newlabel{tocindent2}{0pt}
\newlabel{tocindent3}{0pt}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces {\color  {purple} Numbers of objects from real notebooks.}\relax }}{2}{figure.caption.1}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:numobjects}{{1}{2}{\fix {Numbers of objects from real notebooks.}\relax }{figure.caption.1}{}}
\newlabel{fig:numobjects@cref}{{[figure][1][]1}{[1][2][]2}}
\newlabel{fig:costpercell_storage}{{2a}{2}{Cumulative storage size\relax }{figure.caption.2}{}}
\newlabel{fig:costpercell_storage@cref}{{[subfigure][1][2]2a}{[1][2][]2}}
\newlabel{sub@fig:costpercell_storage}{{a}{2}{Cumulative storage size\relax }{figure.caption.2}{}}
\newlabel{sub@fig:costpercell_storage@cref}{{[subfigure][1][2]2a}{[1][2][]2}}
\newlabel{fig:costpercell_save}{{2b}{2}{Saving times\relax }{figure.caption.2}{}}
\newlabel{fig:costpercell_save@cref}{{[subfigure][2][2]2b}{[1][2][]2}}
\newlabel{sub@fig:costpercell_save}{{b}{2}{Saving times\relax }{figure.caption.2}{}}
\newlabel{sub@fig:costpercell_save@cref}{{[subfigure][2][2]2b}{[1][2][]2}}
\newlabel{fig:costpercell_load}{{2c}{2}{Loading times\relax }{figure.caption.2}{}}
\newlabel{fig:costpercell_load@cref}{{[subfigure][3][2]2c}{[1][2][]2}}
\newlabel{sub@fig:costpercell_load}{{c}{2}{Loading times\relax }{figure.caption.2}{}}
\newlabel{sub@fig:costpercell_load@cref}{{[subfigure][3][2]2c}{[1][2][]2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces {\color  {purple} Temporal exploration is feasible on partial object stores; users set aside smaller storage space and perceive fewer saving and loading delays compared to temporal exploration on snapshotting. Plots show cumulative storage sizes and saving times as a user runs \texttt  {ecomsmph}\xspace  notebook as well as loading times when the user inspects variables referred by each cell.}\relax }}{2}{figure.caption.2}\protected@file@percent }
\newlabel{fig:costpercell}{{2}{2}{\fix {Temporal exploration is feasible on partial object stores; users set aside smaller storage space and perceive fewer saving and loading delays compared to temporal exploration on snapshotting. Plots show cumulative storage sizes and saving times as a user runs \ecomsmph notebook as well as loading times when the user inspects variables referred by each cell.}\relax }{figure.caption.2}{}}
\newlabel{fig:costpercell@cref}{{[figure][2][]2}{[1][2][]2}}
\newlabel{fig:intro_delta_storage}{{3a}{2}{Total storage size\relax }{figure.caption.3}{}}
\newlabel{fig:intro_delta_storage@cref}{{[subfigure][1][3]3a}{[1][2][]2}}
\newlabel{sub@fig:intro_delta_storage}{{a}{2}{Total storage size\relax }{figure.caption.3}{}}
\newlabel{sub@fig:intro_delta_storage@cref}{{[subfigure][1][3]3a}{[1][2][]2}}
\newlabel{fig:intro_delta_save}{{3b}{2}{Average saving time\relax }{figure.caption.3}{}}
\newlabel{fig:intro_delta_save@cref}{{[subfigure][2][3]3b}{[1][2][]2}}
\newlabel{sub@fig:intro_delta_save}{{b}{2}{Average saving time\relax }{figure.caption.3}{}}
\newlabel{sub@fig:intro_delta_save@cref}{{[subfigure][2][3]3b}{[1][2][]2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces {\color  {purple} Object-aware deltas reduce storage and time costs.}\relax }}{2}{figure.caption.3}\protected@file@percent }
\newlabel{fig:intro_delta}{{3}{2}{\fix {Object-aware deltas reduce storage and time costs.}\relax }{figure.caption.3}{}}
\newlabel{fig:intro_delta@cref}{{[figure][3][]3}{[1][2][]2}}
\newlabel{fig:exp_i_storage}{{4a}{2}{Total storage usage\relax }{figure.caption.4}{}}
\newlabel{fig:exp_i_storage@cref}{{[subfigure][1][4]4a}{[1][2][]2}}
\newlabel{sub@fig:exp_i_storage}{{a}{2}{Total storage usage\relax }{figure.caption.4}{}}
\newlabel{sub@fig:exp_i_storage@cref}{{[subfigure][1][4]4a}{[1][2][]2}}
\newlabel{fig:exp_v_storage}{{4b}{2}{Total storage usage (excluding dataset variables)\relax }{figure.caption.4}{}}
\newlabel{fig:exp_v_storage@cref}{{[subfigure][2][4]4b}{[1][2][]2}}
\newlabel{sub@fig:exp_v_storage}{{b}{2}{Total storage usage (excluding dataset variables)\relax }{figure.caption.4}{}}
\newlabel{sub@fig:exp_v_storage@cref}{{[subfigure][2][4]4b}{[1][2][]2}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces {\color  {purple} \textsf  {Chipmink}\xspace  stores all variables 5.7--36.5$\times $ smaller and selected variables 3.5--36.3$\times $ smaller than the best baselines. The plots show the total storage required when saving all variables (left) and saving all but read-only dataset variables (right).}\relax }}{2}{figure.caption.4}\protected@file@percent }
\newlabel{fig:exp_storage}{{4}{2}{\fix {\pga stores all variables 5.7--36.5$\times $ smaller and selected variables 3.5--36.3$\times $ smaller than the best baselines. The plots show the total storage required when saving all variables (left) and saving all but read-only dataset variables (right).}\relax }{figure.caption.4}{}}
\newlabel{fig:exp_storage@cref}{{[figure][4][]4}{[1][2][]2}}
\newlabel{fig:exp_iv_save_skltweet}{{5a}{3}{\skltweet (5.7$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_save_skltweet@cref}{{[subfigure][1][5]5a}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_save_skltweet}{{a}{3}{\skltweet (5.7$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_save_skltweet@cref}{{[subfigure][1][5]5a}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_aicode}{{5b}{3}{\aicode (3.2$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_aicode@cref}{{[subfigure][2][5]5b}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_aicode}{{b}{3}{\aicode (3.2$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_aicode@cref}{{[subfigure][2][5]5b}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_agripred}{{5c}{3}{\agripred (4.9$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_agripred@cref}{{[subfigure][3][5]5c}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_agripred}{{c}{3}{\agripred (4.9$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_agripred@cref}{{[subfigure][3][5]5c}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_msciedaw}{{5d}{3}{\msciedaw (2.7$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_msciedaw@cref}{{[subfigure][4][5]5d}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_msciedaw}{{d}{3}{\msciedaw (2.7$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_msciedaw@cref}{{[subfigure][4][5]5d}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_ecomsmph}{{5e}{3}{\ecomsmph (12.4$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_ecomsmph@cref}{{[subfigure][5][5]5e}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_ecomsmph}{{e}{3}{\ecomsmph (12.4$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_ecomsmph@cref}{{[subfigure][5][5]5e}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_skltweetexc}{{5f}{3}{\texttt {\skltweet -exc} (4.0$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_skltweetexc@cref}{{[subfigure][6][5]5f}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_skltweetexc}{{f}{3}{\texttt {\skltweet -exc} (4.0$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_skltweetexc@cref}{{[subfigure][6][5]5f}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_aicodeexc}{{5g}{3}{\texttt {\aicode -exc} (3.6$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_aicodeexc@cref}{{[subfigure][7][5]5g}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_aicodeexc}{{g}{3}{\texttt {\aicode -exc} (3.6$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_aicodeexc@cref}{{[subfigure][7][5]5g}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_agripredexc}{{5h}{3}{\texttt {\agripred -exc} (5.2$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_agripredexc@cref}{{[subfigure][8][5]5h}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_agripredexc}{{h}{3}{\texttt {\agripred -exc} (5.2$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_agripredexc@cref}{{[subfigure][8][5]5h}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_msciedawexc}{{5i}{3}{\texttt {\msciedaw -exc} (4.6$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_msciedawexc@cref}{{[subfigure][9][5]5i}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_msciedawexc}{{i}{3}{\texttt {\msciedaw -exc} (4.6$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_msciedawexc@cref}{{[subfigure][9][5]5i}{[1][2][]3}}
\newlabel{fig:exp_iv_ecdf_ecomsmphexc}{{5j}{3}{\texttt {\ecomsmph -exc} (14.4$\times $)\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf_ecomsmphexc@cref}{{[subfigure][10][5]5j}{[1][2][]3}}
\newlabel{sub@fig:exp_iv_ecdf_ecomsmphexc}{{j}{3}{\texttt {\ecomsmph -exc} (14.4$\times $)\relax }{figure.caption.5}{}}
\newlabel{sub@fig:exp_iv_ecdf_ecomsmphexc@cref}{{[subfigure][10][5]5j}{[1][2][]3}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces {\color  {purple} Empirical cumulative distributions (eCDFs) of the perceived saving latency (closer to the top-left corner are better). \texttt  {\texttt  {skltweet}\xspace  -exc} refers to \texttt  {skltweet}\xspace  excluding dataset variables and so on. Numbers in parentheses are \textsf  {Chipmink}\xspace  's speedup over the best baseline; Chipmink stores all variables 2.7--12.4$\times $ faster and selected variables 3.6--14.4$\times $ faster than the best baselines.}\relax }}{3}{figure.caption.5}\protected@file@percent }
\newlabel{fig:exp_iv_ecdf}{{5}{3}{\fix {Empirical cumulative distributions (eCDFs) of the perceived saving latency (closer to the top-left corner are better). \texttt {\skltweet -exc} refers to \skltweet excluding dataset variables and so on. Numbers in parentheses are \system 's speedup over the best baseline; Chipmink stores all variables 2.7--12.4$\times $ faster and selected variables 3.6--14.4$\times $ faster than the best baselines.}\relax }{figure.caption.5}{}}
\newlabel{fig:exp_iv_ecdf@cref}{{[figure][5][]5}{[1][2][]3}}
\newlabel{fig:exp_i_partial_load_skltweet}{{6a}{3}{\skltweet \relax }{figure.caption.6}{}}
\newlabel{fig:exp_i_partial_load_skltweet@cref}{{[subfigure][1][6]6a}{[1][2][]3}}
\newlabel{sub@fig:exp_i_partial_load_skltweet}{{a}{3}{\skltweet \relax }{figure.caption.6}{}}
\newlabel{sub@fig:exp_i_partial_load_skltweet@cref}{{[subfigure][1][6]6a}{[1][2][]3}}
\newlabel{fig:exp_i_partial_load_aicode}{{6b}{3}{\aicode \relax }{figure.caption.6}{}}
\newlabel{fig:exp_i_partial_load_aicode@cref}{{[subfigure][2][6]6b}{[1][2][]3}}
\newlabel{sub@fig:exp_i_partial_load_aicode}{{b}{3}{\aicode \relax }{figure.caption.6}{}}
\newlabel{sub@fig:exp_i_partial_load_aicode@cref}{{[subfigure][2][6]6b}{[1][2][]3}}
\newlabel{fig:exp_i_partial_load_agripred}{{6c}{3}{\agripred \relax }{figure.caption.6}{}}
\newlabel{fig:exp_i_partial_load_agripred@cref}{{[subfigure][3][6]6c}{[1][2][]3}}
\newlabel{sub@fig:exp_i_partial_load_agripred}{{c}{3}{\agripred \relax }{figure.caption.6}{}}
\newlabel{sub@fig:exp_i_partial_load_agripred@cref}{{[subfigure][3][6]6c}{[1][2][]3}}
\newlabel{fig:exp_i_partial_load_msciedaw}{{6d}{3}{\msciedaw \relax }{figure.caption.6}{}}
\newlabel{fig:exp_i_partial_load_msciedaw@cref}{{[subfigure][4][6]6d}{[1][2][]3}}
\newlabel{sub@fig:exp_i_partial_load_msciedaw}{{d}{3}{\msciedaw \relax }{figure.caption.6}{}}
\newlabel{sub@fig:exp_i_partial_load_msciedaw@cref}{{[subfigure][4][6]6d}{[1][2][]3}}
\newlabel{fig:exp_i_partial_load_ecomsmph}{{6e}{3}{\ecomsmph \relax }{figure.caption.6}{}}
\newlabel{fig:exp_i_partial_load_ecomsmph@cref}{{[subfigure][5][6]6e}{[1][2][]3}}
\newlabel{sub@fig:exp_i_partial_load_ecomsmph}{{e}{3}{\ecomsmph \relax }{figure.caption.6}{}}
\newlabel{sub@fig:exp_i_partial_load_ecomsmph@cref}{{[subfigure][5][6]6e}{[1][2][]3}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces {\color  {purple} Partial loading time when users are interested in variables accessed at each cell. \textsf  {Chipmink}\xspace  quickly loads target variables proportionally to their sizes, whereas some baselines' performance depends on the entire namespace size.}\relax }}{3}{figure.caption.6}\protected@file@percent }
\newlabel{fig:exp_i_partial_load}{{6}{3}{\fix {Partial loading time when users are interested in variables accessed at each cell. \pga quickly loads target variables proportionally to their sizes, whereas some baselines' performance depends on the entire namespace size.}\relax }{figure.caption.6}{}}
\newlabel{fig:exp_i_partial_load@cref}{{[figure][6][]6}{[1][2][]3}}
\newlabel{fig:exp_ii_avf_storage}{{7a}{3}{Total storage size\relax }{figure.caption.7}{}}
\newlabel{fig:exp_ii_avf_storage@cref}{{[subfigure][1][7]7a}{[1][2][]3}}
\newlabel{sub@fig:exp_ii_avf_storage}{{a}{3}{Total storage size\relax }{figure.caption.7}{}}
\newlabel{sub@fig:exp_ii_avf_storage@cref}{{[subfigure][1][7]7a}{[1][2][]3}}
\newlabel{fig:exp_ii_avf_save}{{7b}{3}{Average overhead saving time\relax }{figure.caption.7}{}}
\newlabel{fig:exp_ii_avf_save@cref}{{[subfigure][2][7]7b}{[1][2][]3}}
\newlabel{sub@fig:exp_ii_avf_save}{{b}{3}{Average overhead saving time\relax }{figure.caption.7}{}}
\newlabel{sub@fig:exp_ii_avf_save@cref}{{[subfigure][2][7]7b}{[1][2][]3}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Ablation study: change detector (CD) and active variable filter (AVF) contribute to storage savings and speedups.\relax }}{3}{figure.caption.7}\protected@file@percent }
\newlabel{fig:exp_ii_avf}{{7}{3}{Ablation study: change detector (CD) and active variable filter (AVF) contribute to storage savings and speedups.\relax }{figure.caption.7}{}}
\newlabel{fig:exp_ii_avf@cref}{{[figure][7][]7}{[1][2][]3}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Higher thesaurus capacity reduces storage usage by detecting more synonymous pods. In these notebooks, storage usage converges with $k_{\text  {cap}}$ around 100\nonbreakingspace KB.\relax }}{3}{figure.caption.8}\protected@file@percent }
\newlabel{fig:exp_ii_cache_storage}{{8}{3}{Higher thesaurus capacity reduces storage usage by detecting more synonymous pods. In these notebooks, storage usage converges with $k_{\text {cap}}$ around 100~KB.\relax }{figure.caption.8}{}}
\newlabel{fig:exp_ii_cache_storage@cref}{{[figure][8][]8}{[1][2][]3}}
\newlabel{fig:exp_iii_storage}{{9a}{4}{Total storage usage\relax }{figure.caption.9}{}}
\newlabel{fig:exp_iii_storage@cref}{{[subfigure][1][9]9a}{[1][2][]4}}
\newlabel{sub@fig:exp_iii_storage}{{a}{4}{Total storage usage\relax }{figure.caption.9}{}}
\newlabel{sub@fig:exp_iii_storage@cref}{{[subfigure][1][9]9a}{[1][2][]4}}
\newlabel{fig:exp_iii_save}{{9b}{4}{Average saving time\relax }{figure.caption.9}{}}
\newlabel{fig:exp_iii_save@cref}{{[subfigure][2][9]9b}{[1][2][]4}}
\newlabel{sub@fig:exp_iii_save}{{b}{4}{Average saving time\relax }{figure.caption.9}{}}
\newlabel{sub@fig:exp_iii_save@cref}{{[subfigure][2][9]9b}{[1][2][]4}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces {\color  {purple} \textsf  {LGA}\xspace  is the most effective podding optimizer in discovering compact podding compared to naive methods (\textsf  {BundleAll}\xspace  , \textsf  {SplitAll}\xspace  , \textsf  {Random}\xspace  ), manually derived heuristic (\textsf  {TbH}\xspace  ), and \textsf  {LGA}\xspace  with inaccurate volatility models (\textsf  {LGA-0}\xspace  , \textsf  {LGA-1}\xspace  ). Thick horizontal lines indicate loose theoretical lower bounds of the optimal storage costs. \textsf  {Exhaustive}\xspace  baseline is studied in \cref  {fig:exp_vi}. }\relax }}{4}{figure.caption.9}\protected@file@percent }
\newlabel{fig:exp_iii}{{9}{4}{\fix {\pglga is the most effective podding optimizer in discovering compact podding compared to naive methods (\bundle , \pnv , \prand ), manually derived heuristic (\pfl ), and \pglga with inaccurate volatility models (\pgz , \pgi ). Thick horizontal lines indicate loose theoretical lower bounds of the optimal storage costs. \exhaust baseline is studied in \cref {fig:exp_vi}. }\relax }{figure.caption.9}{}}
\newlabel{fig:exp_iii@cref}{{[figure][9][]9}{[1][2][]4}}
\newlabel{fig:exp_iv_ecdf_compare_twittnet}{{10a}{4}{\twittnet \relax }{figure.caption.10}{}}
\newlabel{fig:exp_iv_ecdf_compare_twittnet@cref}{{[subfigure][1][10]10a}{[1][2][]4}}
\newlabel{sub@fig:exp_iv_ecdf_compare_twittnet}{{a}{4}{\twittnet \relax }{figure.caption.10}{}}
\newlabel{sub@fig:exp_iv_ecdf_compare_twittnet@cref}{{[subfigure][1][10]10a}{[1][2][]4}}
\newlabel{fig:exp_iv_ecdf_compare_msciedaw}{{10b}{4}{\msciedaw \relax }{figure.caption.10}{}}
\newlabel{fig:exp_iv_ecdf_compare_msciedaw@cref}{{[subfigure][2][10]10b}{[1][2][]4}}
\newlabel{sub@fig:exp_iv_ecdf_compare_msciedaw}{{b}{4}{\msciedaw \relax }{figure.caption.10}{}}
\newlabel{sub@fig:exp_iv_ecdf_compare_msciedaw@cref}{{[subfigure][2][10]10b}{[1][2][]4}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces {\color  {purple} With parallel saving, active variable locking (AVL) and allowlist-based static code checker (ASCC) unblock user's cell executions, improving over synchronous saving.}\relax }}{4}{figure.caption.10}\protected@file@percent }
\newlabel{fig:exp_iv_ecdf_compare}{{10}{4}{\fix {With parallel saving, active variable locking (AVL) and allowlist-based static code checker (ASCC) unblock user's cell executions, improving over synchronous saving.}\relax }{figure.caption.10}{}}
\newlabel{fig:exp_iv_ecdf_compare@cref}{{[figure][10][]10}{[1][2][]4}}
\newlabel{fig:exp_i_storage}{{11a}{4}{Total storage size\relax }{figure.caption.11}{}}
\newlabel{fig:exp_i_storage@cref}{{[subfigure][1][11]11a}{[1][2][]4}}
\newlabel{sub@fig:exp_i_storage}{{a}{4}{Total storage size\relax }{figure.caption.11}{}}
\newlabel{sub@fig:exp_i_storage@cref}{{[subfigure][1][11]11a}{[1][2][]4}}
\newlabel{fig:exp_i_save}{{11b}{4}{Average overhead saving time\relax }{figure.caption.11}{}}
\newlabel{fig:exp_i_save@cref}{{[subfigure][2][11]11b}{[1][2][]4}}
\newlabel{sub@fig:exp_i_save}{{b}{4}{Average overhead saving time\relax }{figure.caption.11}{}}
\newlabel{sub@fig:exp_i_save@cref}{{[subfigure][2][11]11b}{[1][2][]4}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces {\color  {purple} Even when users selectively save some variables and exclude read-only dataset, \textsf  {Chipmink}\xspace  still compactly and quickly stores them, 3.5--36.3$\times $ smaller and 3.6--14.4$\times $ faster than the best baselines.}\relax }}{4}{figure.caption.11}\protected@file@percent }
\newlabel{fig:exp_v_selective}{{11}{4}{\fix {Even when users selectively save some variables and exclude read-only dataset, \pga still compactly and quickly stores them, 3.5--36.3$\times $ smaller and 3.6--14.4$\times $ faster than the best baselines.}\relax }{figure.caption.11}{}}
\newlabel{fig:exp_v_selective@cref}{{[figure][11][]11}{[1][2][]4}}
\newlabel{fig:exp_vi_storage}{{12a}{4}{Total storage size\relax }{figure.caption.12}{}}
\newlabel{fig:exp_vi_storage@cref}{{[subfigure][1][12]12a}{[1][2][]4}}
\newlabel{sub@fig:exp_vi_storage}{{a}{4}{Total storage size\relax }{figure.caption.12}{}}
\newlabel{sub@fig:exp_vi_storage@cref}{{[subfigure][1][12]12a}{[1][2][]4}}
\newlabel{fig:exp_vi_save}{{12b}{4}{Average saving time\relax }{figure.caption.12}{}}
\newlabel{fig:exp_vi_save@cref}{{[subfigure][2][12]12b}{[1][2][]4}}
\newlabel{sub@fig:exp_vi_save}{{b}{4}{Average saving time\relax }{figure.caption.12}{}}
\newlabel{sub@fig:exp_vi_save@cref}{{[subfigure][2][12]12b}{[1][2][]4}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces {\color  {purple} Storage and save time as namespace size scales.}\relax }}{4}{figure.caption.12}\protected@file@percent }
\newlabel{fig:exp_vi}{{12}{4}{\fix {Storage and save time as namespace size scales.}\relax }{figure.caption.12}{}}
\newlabel{fig:exp_vi@cref}{{[figure][12][]12}{[1][2][]4}}
\newlabel{fig:exp_i_storage}{{13a}{5}{Relative storage size\relax }{figure.caption.13}{}}
\newlabel{fig:exp_i_storage@cref}{{[subfigure][1][13]13a}{[1][2][]5}}
\newlabel{sub@fig:exp_i_storage}{{a}{5}{Relative storage size\relax }{figure.caption.13}{}}
\newlabel{sub@fig:exp_i_storage@cref}{{[subfigure][1][13]13a}{[1][2][]5}}
\newlabel{fig:exp_i_save}{{13b}{5}{Relative overhead saving time\relax }{figure.caption.13}{}}
\newlabel{fig:exp_i_save@cref}{{[subfigure][2][13]13b}{[1][2][]5}}
\newlabel{sub@fig:exp_i_save}{{b}{5}{Relative overhead saving time\relax }{figure.caption.13}{}}
\newlabel{sub@fig:exp_i_save@cref}{{[subfigure][2][13]13b}{[1][2][]5}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces {\color  {purple} \textsf  {Chipmink}\xspace  storage size and overhead saving time relative to \textsf  {Dill}\xspace  across different notebook characteristics (RE: read-only cells, AP: cells appending new variables, WR: cells applying write operations on the same variable). \textsf  {Chipmink}\xspace  saves storage space even when the notebook heavily mutates its namespace; however, \textsf  {Chipmink}\xspace  can be slower in such cases.}\relax }}{5}{figure.caption.13}\protected@file@percent }
\newlabel{fig:exp_vii_characteristics}{{13}{5}{\fix {\pga storage size and overhead saving time relative to \dill across different notebook characteristics (RE: read-only cells, AP: cells appending new variables, WR: cells applying write operations on the same variable). \pga saves storage space even when the notebook heavily mutates its namespace; however, \pga can be slower in such cases.}\relax }{figure.caption.13}{}}
\newlabel{fig:exp_vii_characteristics@cref}{{[figure][13][]13}{[1][2][]5}}
\newlabel{fig:exp_vii_mr_storage}{{14a}{5}{Total storage size\relax }{figure.caption.14}{}}
\newlabel{fig:exp_vii_mr_storage@cref}{{[subfigure][1][14]14a}{[1][2][]5}}
\newlabel{sub@fig:exp_vii_mr_storage}{{a}{5}{Total storage size\relax }{figure.caption.14}{}}
\newlabel{sub@fig:exp_vii_mr_storage@cref}{{[subfigure][1][14]14a}{[1][2][]5}}
\newlabel{fig:exp_vii_mr_save}{{14b}{5}{Average saving time\relax }{figure.caption.14}{}}
\newlabel{fig:exp_vii_mr_save@cref}{{[subfigure][2][14]14b}{[1][2][]5}}
\newlabel{sub@fig:exp_vii_mr_save}{{b}{5}{Average saving time\relax }{figure.caption.14}{}}
\newlabel{sub@fig:exp_vii_mr_save@cref}{{[subfigure][2][14]14b}{[1][2][]5}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces {\color  {purple} Storage and save time when the notebook mutates 1\nonbreakingspace GB of data over 10 cells at varied rates. Dotted lines displays the mutation fraction averaged over 5 real notebooks.}\relax }}{5}{figure.caption.14}\protected@file@percent }
\newlabel{fig:exp_vii_mr}{{14}{5}{\fix {Storage and save time when the notebook mutates 1~GB of data over 10 cells at varied rates. Dotted lines displays the mutation fraction averaged over 5 real notebooks.}\relax }{figure.caption.14}{}}
\newlabel{fig:exp_vii_mr@cref}{{[figure][14][]14}{[1][2][]5}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces {\color  {purple} \textsf  {Chipmink}\xspace  's access control overhead. Error bars show the two standard deviation of time measurements. Percentages refer relative overheads over the baseline.}\relax }}{5}{figure.caption.15}\protected@file@percent }
\newlabel{fig:exp_c_overhead}{{15}{5}{\fix {\pga 's access control overhead. Error bars show the two standard deviation of time measurements. Percentages refer relative overheads over the baseline.}\relax }{figure.caption.15}{}}
\newlabel{fig:exp_c_overhead@cref}{{[figure][15][]15}{[1][2][]5}}
\newlabel{TotPages}{{5}{5}{}{page.5}{}}
\gdef \@abspage@last{5}
